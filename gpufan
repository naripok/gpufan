#!/usr/bin/python

import os
import sys
import logging
import signal
from time import sleep

logging.basicConfig(level=logging.INFO)


DEBUG = False
DEVICE = '/sys/class/drm/card0/device/hwmon/hwmon3'
EDGE_INPUT = '/temp1_input'
JUNC_INPUT = '/temp2_input'
FAN_INPUT = '/fan1_input'

# leaky pid params
MIN_PWM = 41
MIN_TEMP = 48
MAX_TEMP = 85
LEAK = 0.985
ALPHA = 0.7
P = 0.004
I = 0.03


def read(path):
    with open(path, 'r') as f:
        return str(f.read())

def read_int(path):
    return int(read(path))

def write(path, s):
    with open(path, 'w') as f:
        return f.write(str(s))

# check if device exists and is amdgpu
if not os.path.isdir(DEVICE):
    logging.error('Device not found. Exiting.')
    sys.exit(1)

if read(DEVICE + '/name') != 'amdgpu\n':
    logging.error('Device is not amdgpu. Exiting.')
    sys.exit(1)

def scale_state(state, out=False):
    if out:
        v = (state + MIN_PWM) * 255 / (255 + MIN_PWM)
    else:
        v = (state - MIN_PWM) * 255 / (255 - MIN_PWM)
    return max(v, 0)

# init vars
acc = 0
delta = 0

logging.info('Setting fan to manual control mode.')
write(DEVICE + '/pwm1_enable', 1)

# cleanup function
run = True
def exitHandler(sig, frame):
    global run
    run = False
signal.signal(signal.SIGTERM, exitHandler)
signal.signal(signal.SIGINT, exitHandler)

logging.info('Running...')
try:
    while run:
        temp = read_int(DEVICE + JUNC_INPUT) / 1000
        state = read_int(DEVICE + '/pwm1')
        scaled_state = scale_state(state)

        prop = max((temp - MIN_TEMP) * 255 / (MAX_TEMP - MIN_TEMP), 0)
        acc = max(min(acc * LEAK + (prop - scaled_state), 1e5), -1e5)
        target = prop * P + acc * I

        #  pwm_target = int(min(max(round(scale_state(state, True) + delta * P + acc * I), 0), 255))
        pwm_target = scaled_state * ALPHA + target * (1 - ALPHA)
        output = int(min(max(round(scale_state(pwm_target, True)), 0), 255))

        if DEBUG:
            fan = read_int(DEVICE + FAN_INPUT)
            junction = read_int(DEVICE + JUNC_INPUT) / 1000
            logging.info('===== env =====')
            logging.info(f'edge: {temp}')
            logging.info(f'junction: {junction}')
            logging.info(f'state: {state}')
            logging.info(f'scaled_state: {scaled_state}')
            logging.info(f'fan: {fan}')
            logging.info('===== pid =====')
            logging.info(f'prop: {prop}')
            logging.info(f'acc: {acc}')
            logging.info(f'target: {target}')
            logging.info(f'pwm_target: {pwm_target}')
            logging.info(f'output: {output}')

        write(DEVICE + '/pwm1', output)

        sleep(0.1)

except Exception as e:
    logging.exception(e)

finally:
    write(DEVICE + '/pwm1_enable', 2)
    logging.info('Setting fan to automatic control mode.')
